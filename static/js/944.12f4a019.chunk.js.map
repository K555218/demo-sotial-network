{"version":3,"file":"static/js/944.12f4a019.chunk.js","mappings":"wLACA,EAA4B,2BAA5B,EAAqE,6BAArE,EAA2G,wBAA3G,EAA4I,wBAA5I,EAA+K,0BAA/K,EAAmN,yB,mBCkBnN,EAfmB,SAACA,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAEI,iBAAKC,UAAWC,EAAW,IAAMA,EAAjC,WACI,gBAAKC,IAAI,6LAA6LC,IAAI,aAC1M,SAAC,KAAD,CAASC,GAAIN,EAAME,UAAW,SAAAK,GAAI,OAAIA,EAAKC,SACvCL,EAAWA,GADf,SAC2BJ,EAAMU,WCF3C,EANc,SAACV,GACb,OACI,iBAAKG,UAAWC,EAAhB,UAA4BJ,EAAMW,QAAlC,Q,uCCDFC,GAAcC,EAAAA,EAAAA,IAAiB,IAC/BC,GAAaC,EAAAA,EAAAA,IAAiB,GAmBpC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAjBwB,SAACjB,GACrB,OACI,kBAAOkB,SAAUlB,EAAMmB,aAAvB,WACI,0BACI,SAACC,EAAA,EAAD,CAAQV,KAAK,iBAAiBW,YAAY,qBACnCC,SAAU,CAACC,EAAAA,GAAUX,EAAaE,GACjCU,UAAWC,EAAAA,QAIvB,0BACI,oDCkBhB,EA3BgB,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBR,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAC1E8B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAAoBT,GAAIgC,EAAEhC,IAAZgC,EAAEhC,OAC7DwB,EAAMS,eAOzB,OACE,iBAAKhC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKwB,KAEL,gBAAKzB,UAAWC,EAAhB,UACI,yBAAM4B,OAGL,SAACI,EAAD,CAAgBlB,SAbT,SAACmB,GAClBrC,EAAMsC,YAAYD,EAAOF,uB,mBC2BhC,GAAeI,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACd,GACvB,MAAO,CACFC,YAAcD,EAAMC,gBAIA,SAACc,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,SAOpCQ,EAAAA,EAFJ,CAGEC","sources":["webpack://01-fiest-proj/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Message/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Dialogues\":\"Dialogs_Dialogues__-IoSm\",\"dialogItems\":\"Dialogs_dialogItems__zgpAM\",\"active\":\"Dialogs_active__v-gOt\",\"dialog\":\"Dialogs_dialog__v9Nb-\",\"Messages\":\"Dialogs_Messages__SxdO5\",\"message\":\"Dialogs_message__BKRqb\",\"messageArea\":\"Dialogs_messageArea__4hDhN\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/Dialogs/\" + props.id\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://media.istockphoto.com/vectors/male-profile-flat-blue-simple-icon-with-long-shadow-vector-id522855255?k=20&m=522855255&s=612x612&w=0&h=fLLvwEbgOmSzk1_jQ0MgDATEVcVOh_kqEe0rqi7aM5A=\" alt=\"profile\"/>\r\n            <NavLink to={path} className={data => data.isActive ?\r\n                s.active : s.dialog }>{props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message} </div>\r\n    )\r\n}\r\n\r\n  export default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst minLength3 = minLengthCreator(3);\r\n\r\nconst aAddMessageForm = (props) => {\r\n    return (\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  name=\"newMessageBody\" placeholder=\"ENTER YOUR MESSAGE\"\r\n                       validate={[required, maxLength50, minLength3]}\r\n                        component={Textarea}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button>add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(aAddMessageForm)\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n       props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n      return (\r\n        <div className={s.Dialogues}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.Messages}>\r\n                <div>{messagesElement}</div>\r\n\r\n            </div>\r\n                 <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {WithAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().dialogsPage;\r\n//\r\n//                 let onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageCreator());\r\n//                 }\r\n//\r\n//                 let onNewMessageChange = (body) => {\r\n//                     store.dispatch(updateNewMessageBodyCreator(body))\r\n//                 }\r\n//                 return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                                 sendMessage={onSendMessageClick}\r\n//                                 dialogsPage={state}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n     dialogsPage:  state.dialogsPage,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthNavigate\r\n)(Dialogs);"],"names":["props","path","id","className","s","src","alt","to","data","isActive","name","message","maxLength50","maxLengthCreator","minLength3","minLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElement","messages","m","newMessageBody","AddMessageForm","values","sendMessage","compose","connect","dispatch","sendMessageCreator","WithAuthNavigate","Dialogs"],"sourceRoot":""}